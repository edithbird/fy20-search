ggplot(aes(x = Week, y = Impressions , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
PGUPV <- IGD %>%
ggplot(aes(x = Week, y = UPV , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
PGRR <- IGD %>%
ggplot(aes(x = Week, y = ResultsRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
a <- ggarrange(PGImp, PGER, PGUPV, PGRR, ncol=4, nrow=1, common.legend = TRUE, legend="right")
annotate_figure(a, text_grob(paste0( IGD$Code_Vendor, "_ ", IGD$Code_Medium, "_ ", IGD$Code_Product), color = "darkblue", face = "plain", size = 18, just = "right"))
}
TW_DISP_TBL <- function(temp_C){
TD <- kable(IGD %>%
group_by(Code_Audience) %>%
summarise(YTD_Impressions = prettyNum(round(sum(Impressions),0), big.mark = ","),
Avg_ER = round(sum(Engagements)/sum(Impressions) * 100, 2),
YTD_UPV = prettyNum(round(sum(UPV),0), big.mark = ","),
Avg_RR = paste0(round(sum(Results)/sum(Impressions) * 100, 2), "%"),
Avg_CTR = paste0(Avg_CTR, "%")))%>%
kable_styling("striped", full_width = F) %>%
row_spec(0, angle = -30, font_size = 13)
return(TD)
}
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 20
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
head(FMVM %>% filter(Code_Vendor == "TW"))
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
fig.width=8,
fig.height=2
)
library(knitr)
library(janitor)
library(tidyr)
library(zoo)
library(lubridate)
library(hms)
library(dplyr)
library(ggplot2)
library(gtable)
library(grid)
library(ggpubr)
library(kableExtra)
library(scales)
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
library(knitr)
library(janitor)
library(tidyr)
library(zoo)
library(lubridate)
library(hms)
library(dplyr)
library(ggplot2)
library(gtable)
library(grid)
library(ggpubr)
library(kableExtra)
library(scales)
# FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- read.csv("C:/Users/christine.iyer/Box/AnnualCampaignVendorPerformance/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- FM %>% filter(Master_Adname_Type == "NC")
FM <- FM %>% mutate(Code_Audience = ifelse(Master_Adname == "FA20_BR_FB_VID__TL_UG_D_1",  "TL", Code_Audience ), Code_Product = ifelse(Master_Adname == "FA20_BR_FB_VID__TL_UG_D_1",  "UG", Code_Product), Master_Results = as.numeric(Master_Results))
FM <- FM %>% select(1:8, 13, 15:19, 21:24, 26, 28:29, 31:39, 41) %>% select(Master_Date, everything())
names(FM)
FM <- FM %>% mutate_at(10:31, ~replace(., is.na(.), 0)) %>% mutate(Master_Date = as.Date(Master_Date, format = "%Y-%m-%d")) %>% arrange(Master_Date)
colorP <- c("#F6A704", "#0E1033","#4E7B14","#A92007","#D47E0A")
FMVM <- FM %>%
mutate(Product_Audience = paste0(Code_Product, "_", Code_Audience)) %>%
group_by(Code_Audience,Code_Product, Code_Vendor, Code_Medium,Week = as.Date(cut(Master_Date + 1, "week")), format = "%Y-%m-%d") %>%
summarise(
Cost = sum(Master_Cost),
Clicks = sum(Master_Clicks),
Impressions = round(sum(Master_Impressions),0),
#CTR = paste0(round(Clicks/Impressions * 100, 2), "%"),
Bounces = sum(Master_Bounces),
Sessions = sum(Master_Sessions),
UPV = sum(Master_Unique_Pageviews),
Views = sum(Master_Views),
Completions = sum(Master_Completions),
#BounceRate = paste0(round(Bounces/Sessions * 100, 2), "%"),
Step1 = sum(Master_Time_On_Page)/(sum(Master_Pageviews)- sum(Master_Exits)),
Av_TOP = round_hms(as_hms(Step1), 5),
ClickRatePct = round(Clicks/Impressions * 100, 2),
BounceRatePct = round(Bounces/Sessions * 100, 2),
ViewRate = round(Views/Impressions * 100, 2),
VTR = round(Completions/Impressions *100, 2),
ClickableCompletions = sum(Master_Clickable_Completions),
ClickableCompRate = round(Clicks/ClickableCompletions * 100, 2),
Swipes = sum(Master_Swipes),
SwipeUpRatePct = round(Swipes/Impressions * 100, 2),
Opens = sum(Master_Clicks_To_Site),
CTOR = round(Opens/Clicks * 100, 2),
Sends = sum(Master_Sends),
LIOpens = sum(Master_Opens),
LIClicks = sum(Master_Clicks_Sponsored_InMail),
OpenRate = round(LIOpens/Sends * 100, 2),
Engagements = sum(Master_Engagements),
Results = sum(Master_Results),
ResultsRate = round(Results/Impressions * 100, 2),
EngagementRate = round(Engagements/Impressions * 100, 2),
EngRate = round((sum(LIOpens)+sum(Engagements))/sum(Sends)*100, 2),
LICTOR = round(sum(LIClicks)/sum(LIOpens) * 100, 2)) %>%
select(Week, Impressions, Clicks, Bounces, Sessions, Swipes, ClickRatePct, SwipeUpRatePct, UPV, BounceRatePct, Av_TOP, ClickableCompRate, VTR, CTOR,OpenRate, Sends, ViewRate, ClickableCompletions, Completions, Opens, LIOpens, LIClicks, Engagements, LICTOR, EngRate, EngagementRate, Views, Completions, Results, ResultsRate)
TW_DISP_PLT <- function(temp_F) {
PGER <- IGD %>%
ggplot(aes(x = Week, y = EngagementRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank()) +
geom_hline(yintercept = c(0.45,0.73), linetype="dashed")
PGImp <- IGD %>%
ggplot(aes(x = Week, y = Impressions , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
PGUPV <- IGD %>%
ggplot(aes(x = Week, y = UPV , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
PGRR <- IGD %>%
ggplot(aes(x = Week, y = ResultsRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
a <- ggarrange(PGImp, PGER, PGUPV, PGRR, ncol=4, nrow=1, common.legend = TRUE, legend="right")
annotate_figure(a, text_grob(paste0( IGD$Code_Vendor, "_ ", IGD$Code_Medium, "_ ", IGD$Code_Product), color = "darkblue", face = "plain", size = 18, just = "right"))
}
TW_DISP_TBL <- function(temp_C){
TD <- kable(IGD %>%
group_by(Code_Audience) %>%
summarise(YTD_Impressions = prettyNum(round(sum(Impressions),0), big.mark = ","),
Avg_ER = round(sum(Engagements)/sum(Impressions) * 100, 2),
YTD_UPV = prettyNum(round(sum(UPV),0), big.mark = ","),
Avg_RR = paste0(round(sum(Results)/sum(Impressions) * 100, 2), "%"),
Avg_CTR = paste0(Avg_CTR, "%")))%>%
kable_styling("striped", full_width = F) %>%
row_spec(0, angle = -30, font_size = 13)
return(TD)
}
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 20
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
TD <- kable(IGD %>%
group_by(Code_Audience) %>%
summarise(YTD_Impressions = prettyNum(round(sum(Impressions),0), big.mark = ","),
Avg_ER = round(sum(Engagements)/sum(Impressions) * 100, 2),
YTD_UPV = prettyNum(round(sum(UPV),0), big.mark = ","),
Avg_RR = paste0(round(sum(Results)/sum(Impressions) * 100, 2), "%")))%>%
kable_styling("striped", full_width = F) %>%
row_spec(0, angle = -30, font_size = 13)
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 20
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
TW_DISP_PLT <- function(temp_F) {
PGER <- IGD %>%
ggplot(aes(x = Week, y = EngagementRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank()) +
geom_hline(yintercept = c(0.45,0.73), linetype="dashed")
PGImp <- IGD %>%
ggplot(aes(x = Week, y = Impressions , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
PGUPV <- IGD %>%
ggplot(aes(x = Week, y = UPV , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
PGRR <- IGD %>%
ggplot(aes(x = Week, y = ResultsRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
a <- ggarrange(PGImp, PGER, PGUPV, PGRR, ncol=4, nrow=1, common.legend = TRUE, legend="right")
annotate_figure(a, text_grob(paste0( IGD$Code_Vendor, "_ ", IGD$Code_Medium, "_ ", IGD$Code_Product), color = "darkblue", face = "plain", size = 18, just = "right"))
}
TW_DISP_TBL <- function(temp_C){
TD <- kable(IGD %>%
group_by(Code_Audience) %>%
summarise(YTD_Impressions = prettyNum(round(sum(Impressions),0), big.mark = ","),
Avg_ER = round(sum(Engagements)/sum(Impressions) * 100, 2),
YTD_UPV = prettyNum(round(sum(UPV),0), big.mark = ","),
Avg_RR = paste0(round(sum(Results)/sum(Impressions) * 100, 2), "%")))%>%
kable_styling("striped", full_width = F) %>%
row_spec(0, angle = -30, font_size = 13)
return(TD)
}
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 20
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 60
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
start_Date <- as.Date("2019-10-29")
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= max(Week))
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
TW_DISP_PLT <- function(temp_F) {
PGER <- IGD %>%
ggplot(aes(x = Week, y = EngagementRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank()) +
geom_hline(yintercept = 0.079, linetype="dashed")
PGImp <- IGD %>%
ggplot(aes(x = Week, y = Impressions , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
PGUPV <- IGD %>%
ggplot(aes(x = Week, y = UPV , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
PGRR <- IGD %>%
ggplot(aes(x = Week, y = ResultsRate , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())+
geom_hline(yintercept = 1.11, linetype="dashed")
a <- ggarrange(PGImp, PGER, PGUPV, PGRR, ncol=4, nrow=1, common.legend = TRUE, legend="right")
annotate_figure(a, text_grob(paste0( IGD$Code_Vendor, "_ ", IGD$Code_Medium, "_ ", IGD$Code_Product), color = "darkblue", face = "plain", size = 18, just = "right"))
}
TW_DISP_TBL <- function(temp_C){
TD <- kable(IGD %>%
group_by(Code_Audience) %>%
summarise(YTD_Impressions = prettyNum(round(sum(Impressions),0), big.mark = ","),
Avg_ER = round(sum(Engagements)/sum(Impressions) * 100, 2),
YTD_UPV = prettyNum(round(sum(UPV),0), big.mark = ","),
Avg_RR = paste0(round(sum(Results)/sum(Impressions) * 100, 2), "%")))%>%
kable_styling("striped", full_width = F) %>%
row_spec(0, angle = -30, font_size = 13)
return(TD)
}
start_Date <- as.Date("2019-10-29")
end_Date <- start_Date + 20
IGD <- FMVM %>%
filter(Code_Vendor == "TW" & Code_Medium == "DISP"  & Week >= start_Date & Week <= end_Date)
TW_DISP_PLT(a)
TW_DISP_TBL(TD)
setwd("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-03
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c = 2020")
queried_records <- sf_query(my_soql)
#kable(head(queried_records))
# dim(queried_records)
# queried_records
# unique(queried_records$Ref__c)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
write.csv(trythis, "C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/Conversions/Conversion_3-03-20_DeDuped.csv")
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
# Don't forget to change the date!
write.csv(trythis, "C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/Conversions/Conversion_3-03-20_DeDuped.csv")
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c) %>% summarise(n = n())
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email,Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c) %>% summarise(n = n()) %>% filter(n>1)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
dim(LeadsUploaded)
names(LeadsUploaded)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email,Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c) %>% summarise(n = n()) %>% filter(n>1)
LeadsUploaded %>% group_by(Email,Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c) %>% summarise(n = n()) %>% filter(n>1)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
# Don't forget to change the date!
write.csv(trythis, "C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/Conversions/Conversion_3-03-20_DeDuped.csv")
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
names(trythis)
head(trythis)
trythis1 <- trythis %>% group_by(Primary_State_Code__c) %>% summarise(Inqs = n())
trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs))
paste0("As of", Sys.Date(), " ,",sum(trythis1$Inqs) "leads have converted to either inquiries or applicants")
trythis1 <-  trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs))
paste0("As of", Sys.Date(), " ,",sum(trythis1$Inqs) " leads have converted to either inquiries or applicants")
trythis1
trythis1 <-  trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs) %>% mutate(Conversions = paste0("As of", Sys.Date(), " ,",sum(trythis1$Inqs) " leads have converted to either inquiries or applicants")))
trythis1 <-  trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs) %>% mutate(Conversions = paste0("As of", Sys.Date(), " ,",sum(Inqs) " leads have converted to either inquiries or applicants")))
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
# Don't forget to change the date!
write.csv(trythis, "C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/Conversions/Conversion_3-03-20_DeDuped.csv")
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
knitr::opts_chunk$set(echo = TRUE)
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-03
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c = 2021")
queried_records <- sf_query(my_soql)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA21_Junior/FA21_Search_Jan2020_JR.csv", header = T, stringsAsFactors = F)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA21_Junior/FA21_Search_Jan2020_JR.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
write.csv(trythis, "C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA21_Junior/Conversions/Conversion_3-03-20_DeDuped.csv")
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
trythis1 <- trythis %>% group_by(Primary_State_Code__c) %>% summarise(Inqs = n())
trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs))
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
LeadsUploaded <- read.csv("file:///C:/Users/christine.iyer/Desktop/Fall19Leads/Fall2019LeadsafterUploadAndDeDuped.csv", header = T, stringsAsFactors = F)
knitr::opts_chunk$set(echo = TRUE)
start_date <- "2020-02-25"
end_date <-  "2020-03-02"
library(googleAnalyticsR)
ga_auth()
my_accounts <- ga_account_list()
View(my_accounts)
ga_id <- 63145830
start_date <- "2020-02-25"
end_date <-  "2020-03-02"
campaign_filter <- dim_filter(dimension="campaign",operator="REGEXP",expressions="FY20")
my_filter_clause <- filter_clause_ga4(list(campaign_filter))
GA_thisWk <- google_analytics(ga_id, date_range = c(start_date, end_date),
metrics = c("uniquePageviews", "bounces", "timeOnPage", "sessions", "newUsers", "pageviews", "exits", "sessionDuration"),
dimensions = c("date", "landingPagePath","source", "medium", "adContent", "campaign", "region", "city"),
dim_filters = my_filter_clause,
anti_sample = TRUE
)
head(GA_thisWk)
tail(GA_thisWk)
unique(GA_thisWk$source)
#GA_thisWk %>% group_by(source) %>% summarise(UPV = sum(uniquePageviews))
write.csv(GA_thisWk, "C:/Users/christine.iyer/Box/FY20_Advertising/FY20_GoogleAnalytics/GoogleAnalytics_02-25
-20.csv", row.names = F)
head(GA_thisWk)
tail(GA_thisWk)
unique(GA_thisWk$source)
#GA_thisWk %>% group_by(source) %>% summarise(UPV = sum(uniquePageviews))
write.csv(GA_thisWk, "C:/Users/christine.iyer/Box/FY20_Advertising/FY20_GoogleAnalytics/GoogleAnalytics_02-25-20.csv", row.names = F)
#":\FileMaker\Uploads\GoogleAnalytics.csv"
write.csv(GA_thisWk, "file:///C:/FileMaker/Uploads/GoogleAnalytics.csv", row.names = FALSE)
